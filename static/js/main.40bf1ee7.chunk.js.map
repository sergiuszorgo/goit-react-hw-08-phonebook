{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducer.js","components/Container/Container.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getContacts","dispatch","axios","get","then","data","catch","error","message","addContact","name","number","contact","id","nanoid","post","deleteContact","delete","getAllContacts","state","items","contacts","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","lowerName","toLowerCase","includes","createReducer","_","payload","combineReducers","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","authActions","response","logIn","logOut","getCurrentUser","getState","persistedToken","auth","initialUserState","email","user","setError","isAuthenticated","getIsAuthenticated","getUserName","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","marginRight","mapDispatchToProps","onLogout","authOperations","type","onClick","AuthNav","header","justifyContent","borderBottom","Container","children","className","s","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","App","this","onGetCurrentUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40bf1ee7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contact/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contact/getContactsSuccess');\r\nexport const getContactsError = createAction('contact/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\n// axios.defaults.baseURL = `http://localhost:4040`;\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(error => dispatch(getContactsError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = { id: nanoid(), name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.items.loading;\nconst getAllContacts = state => state.items.contacts;\nconst getFilter = state => state.items.filter;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const lowerName = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerName),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getAllContacts,\n  getFilter,\n  getFilteredContacts,\n};\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__x8Kx7\"};","import { createAction } from '@reduxjs/toolkit'; //!\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react'; //!\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react'; //!\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react'; //!\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    // minWidth: '320px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<h1 className=\"Load\">Loading...</h1>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              component={RegisterView}\n              redirectTo=\"/contacts\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              component={LoginView}\n              redirectTo=\"/contacts\"\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './phonebook';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    items: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}